{"version":3,"sources":["../../src/apps/bot.js"],"names":["createApp","handle","app","all","req","res","bot","Bot","init","code","query","token","body","setupWebHook","type","send","post","message","console","log","JSON","stringify","eventType","deleteBot","result","botId","ownerId","joinGroupBot","findByPk","groupId","id","group","header"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,SAAS,GAAGC,MAAM,IAAI;AAC1B,QAAMC,GAAG,GAAG,uBAAZ;AAEAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACpC,UAAMC,GAAG,GAAG,MAAMC,YAAIC,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAEL,GAAG,CAACM,KAAJ,CAAUD,IAAlB;AAAwBE,MAAAA,KAAK,EAAEP,GAAG,CAACQ;AAAnC,KAAT,CAAlB;AACA,UAAMN,GAAG,CAACO,YAAJ,EAAN,CAFoC,CAEX;;AACzB,UAAMZ,MAAM,CAAC;AAAEa,MAAAA,IAAI,EAAE,UAAR;AAAoBR,MAAAA;AAApB,KAAD,CAAZ;AACAD,IAAAA,GAAG,CAACU,IAAJ,CAAS,EAAT;AACD,GALD;AAOAb,EAAAA,GAAG,CAACc,IAAJ,CAAS,UAAT,EAAqB,OAAOZ,GAAP,EAAYC,GAAZ,KAAoB;AACvC,UAAMY,OAAO,GAAGb,GAAG,CAACQ,IAApB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAhC;AACA,UAAML,IAAI,GAAGK,OAAO,CAACL,IAArB;;AACA,QAAIA,IAAJ,EAAU;AACR,cAAQA,IAAI,CAACU,SAAb;AACE,aAAK,QAAL;AAAe;AACb,kBAAMC,SAAS,GAAG,MAAM,0BAAWN,OAAX,CAAxB;AACA,kBAAMhB,MAAM,CAAC;AAAEa,cAAAA,IAAI,EAAE,YAAR;AAAsBR,cAAAA,GAAG,EAAEiB;AAA3B,aAAD,CAAZ;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,kBAAMC,MAAM,GAAG,MAAM,yBAAUP,OAAV,CAArB;;AACA,gBAAIO,MAAJ,EAAY;AACV,oBAAMvB,MAAM,CAAC;AAAEa,gBAAAA,IAAI,EAAE,aAAR;AAAuB,mBAAGU;AAA1B,eAAD,CAAZ;AACD;;AACD;AACD;;AACD,aAAK,WAAL;AACE,gBAAM,yBAAUP,OAAV,CAAN;AACA;;AACF,aAAK,aAAL;AAAoB;AAClB,kBAAMQ,KAAK,GAAGR,OAAO,CAACS,OAAtB;AACA,kBAAMC,YAAY,GAAG,MAAMpB,YAAIqB,QAAJ,CAAaH,KAAb,CAA3B;AACA,kBAAMI,OAAO,GAAGZ,OAAO,CAACL,IAAR,CAAakB,EAA7B;AACA,kBAAM7B,MAAM,CAAC;AAAEa,cAAAA,IAAI,EAAE,cAAR;AAAwBR,cAAAA,GAAG,EAAEqB,YAA7B;AAA2CI,cAAAA,KAAK,EAAE;AAAED,gBAAAA,EAAE,EAAED;AAAN;AAAlD,aAAD,CAAZ;AACA;AACD;;AACD;AACE;AAxBJ;;AA0BA,YAAM5B,MAAM,CAAC;AAAEa,QAAAA,IAAI,EAAEF,IAAI,CAACU,SAAb;AAAwBL,QAAAA;AAAxB,OAAD,CAAZ;AACD;;AACDZ,IAAAA,GAAG,CAAC2B,MAAJ,CAAW,kBAAX,EAA+B5B,GAAG,CAAC4B,MAAJ,CAAW,kBAAX,CAA/B;AACA3B,IAAAA,GAAG,CAACU,IAAJ,CAAS,EAAT;AACD,GAnCD;AAqCA,SAAOb,GAAP;AACD,CAhDD;;eAkDeF,S","sourcesContent":["import express from 'express'\n\nimport { Bot } from '../models'\nimport { botDeleted, postAdded, groupLeft } from '../handlers'\n\nconst createApp = handle => {\n  const app = express()\n\n  app.all('/oauth', async (req, res) => {\n    const bot = await Bot.init({ code: req.query.code, token: req.body })\n    await bot.setupWebHook() // this might take a while, depends on when the bot user is ready\n    await handle({ type: 'BotAdded', bot })\n    res.send('')\n  })\n\n  app.post('/webhook', async (req, res) => {\n    const message = req.body\n    console.log('WebHook payload:', JSON.stringify(message, null, 2))\n    const body = message.body\n    if (body) {\n      switch (body.eventType) {\n        case 'Delete': {\n          const deleteBot = await botDeleted(message)\n          await handle({ type: 'BotRemoved', bot: deleteBot })\n          break\n        }\n        case 'PostAdded': {\n          const result = await postAdded(message)\n          if (result) {\n            await handle({ type: 'Message4Bot', ...result })\n          }\n          break\n        }\n        case 'GroupLeft':\n          await groupLeft(message)\n          break\n        case 'GroupJoined': {\n          const botId = message.ownerId\n          const joinGroupBot = await Bot.findByPk(botId)\n          const groupId = message.body.id\n          await handle({ type: 'BotJoinGroup', bot: joinGroupBot, group: { id: groupId } })\n          break\n        }\n        default:\n          break\n      }\n      await handle({ type: body.eventType, message })\n    }\n    res.header('Validation-Token', req.header('Validation-Token'))\n    res.send('')\n  })\n\n  return app\n}\n\nexport default createApp\n"],"file":"bot.js"}