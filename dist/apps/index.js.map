{"version":3,"sources":["../../src/apps/index.js"],"names":["createApp","handle","skills","mergedHandle","event","handled","skill","result","app","use","express","json","urlencoded","extended","listen","bind","port","callback","console","log","process","env","RINGCENTRAL_CHATBOT_SERVER"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,MAAM,GAAG,EAAlB,KAAyB;AACzC,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClC,QAAIC,OAAO,GAAG,KAAd;;AACA,QAAIJ,MAAJ,EAAY;AACVI,MAAAA,OAAO,GAAG,MAAMJ,MAAM,CAACG,KAAD,EAAQC,OAAR,CAAtB;AACD;;AACD,SAAK,MAAMC,KAAX,IAAoBJ,MAApB,EAA4B;AAC1B,UAAII,KAAK,CAACL,MAAV,EAAkB;AAChB,cAAMM,MAAM,GAAG,MAAMD,KAAK,CAACL,MAAN,CAAaG,KAAb,EAAoBC,OAApB,CAArB;AACAA,QAAAA,OAAO,GAAGA,OAAO,IAAIE,MAArB;AACD;AACF;AACF,GAXD;;AAYA,QAAMC,GAAG,GAAG,uBAAZ;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,MAAP,CAAR;AACAD,EAAAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAH,EAAAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAnB,CAAR;AACAL,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,oBAASN,YAAT,CAAlB;AACAK,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB,kBAAON,YAAP,CAAhB;;AACA,OAAK,MAAMG,KAAX,IAAoBJ,MAApB,EAA4B;AAC1B,QAAII,KAAK,CAACE,GAAV,EAAe;AACbA,MAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaH,KAAK,CAACE,GAAnB;AACD;AACF;;AACDA,EAAAA,GAAG,CAACL,YAAJ,GAAmBA,YAAnB,CAxByC,CAwBT;;AAEhC,QAAMW,MAAM,GAAGN,GAAG,CAACM,MAAJ,CAAWC,IAAX,CAAgBP,GAAhB,CAAf;;AACAA,EAAAA,GAAG,CAACM,MAAJ,GAAa,CAACE,IAAD,EAAOC,QAAP,KAAoB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCH,IAAK;kDACJI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,YADrF;AAEAR,IAAAA,MAAM,CAACE,IAAD,EAAOC,QAAP,CAAN;AACD,GAJD;;AAMA,SAAOT,GAAP;AACD,CAlCD;;eAoCeR,S","sourcesContent":["import express from 'express'\nimport morgan from 'morgan'\n\nimport botApp from './bot'\nimport adminApp from './admin'\n\nconst createApp = (handle, skills = []) => {\n  const mergedHandle = async event => {\n    let handled = false\n    if (handle) {\n      handled = await handle(event, handled)\n    }\n    for (const skill of skills) {\n      if (skill.handle) {\n        const result = await skill.handle(event, handled)\n        handled = handled || result\n      }\n    }\n  }\n  const app = express()\n  app.use(morgan('tiny'))\n  app.use(express.json())\n  app.use(express.urlencoded({ extended: true }))\n  app.use('/admin', adminApp(mergedHandle))\n  app.use('/bot', botApp(mergedHandle))\n  for (const skill of skills) {\n    if (skill.app) {\n      app.use('/', skill.app)\n    }\n  }\n  app.mergedHandle = mergedHandle // for unit testing\n\n  const listen = app.listen.bind(app)\n  app.listen = (port, callback) => {\n    console.log(`Bot service listening on port ${port}\nPlease set your RingCentral app redirect URI to ${process.env.RINGCENTRAL_CHATBOT_SERVER}/bot/oauth`)\n    listen(port, callback)\n  }\n\n  return app\n}\n\nexport default createApp\n"],"file":"index.js"}