{"version":3,"sources":["../../src/models/Bot.js"],"names":["Bot","sequelize","define","id","type","Sequelize","STRING","primaryKey","token","JSON","init","code","rc","RingCentral","process","env","RINGCENTRAL_CHATBOT_CLIENT_ID","RINGCENTRAL_CHATBOT_CLIENT_SECRET","RINGCENTRAL_SERVER","authorize","redirectUri","RINGCENTRAL_CHATBOT_SERVER","create","owner_id","r","get","data","toString","Object","defineProperty","prototype","check","e","errorCode","remove","console","log","ensureWebHook","hasActiveSub","subs","records","filter","sub","deliveryMode","address","status","delete","setupWebHook","done","post","eventFilters","expiresIn","transportType","sendMessage","groupId","messageObj","getGroup","undefined","services","Service","findAll","where","botId","service","destroy","rename","newName","put","contact","firstName","setAvatar","name","formData","FormData","append","headers","getHeaders","getUser","userId","glip","startsWith","companyId","getSubscriptions"],"mappings":"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","sourcesContent":["import Sequelize from 'sequelize'\nimport RingCentral from 'ringcentral-js-concise'\nimport delay from 'timeout-as-promise'\nimport FormData from 'form-data'\n\nimport sequelize from './sequelize'\nimport { Service } from './Service'\n\nexport const Bot = sequelize.define('bot', {\n  id: {\n    type: Sequelize.STRING,\n    primaryKey: true\n  },\n  token: {\n    type: Sequelize.JSON\n  }\n})\n\nBot.init = async ({ code, token }) => {\n  const rc = new RingCentral(\n    process.env.RINGCENTRAL_CHATBOT_CLIENT_ID,\n    process.env.RINGCENTRAL_CHATBOT_CLIENT_SECRET,\n    process.env.RINGCENTRAL_SERVER\n  )\n  if (code) { // public bot\n    await rc.authorize({ code, redirectUri: process.env.RINGCENTRAL_CHATBOT_SERVER + '/bot/oauth' })\n    const token = rc.token()\n    /*\n    {\n      access_token: 'xxxxxx',\n      token_type: 'bearer',\n      expires_in: 2147483647,\n      scope: 'EditExtensions SubscriptionWebhook Glip Accounts',\n      owner_id: '266262004',\n      endpoint_id: 'p7GZlEVHRwKDwbx6UkH0YQ'\n    }\n    */\n    return Bot.create({\n      id: token.owner_id,\n      token\n    })\n  } else if (token) { // private bot\n    /*\n    {\n      access_token: 'xxxxxx',\n      creator_extension_id: '230919004',\n      creator_account_id: '230919004',\n      client_id: 'zNzIRgPiSbylEoW89Daffg'\n    }\n    */\n    rc.token(token)\n    const r = await rc.get('/restapi/v1.0/account/~/extension/~')\n    const id = r.data.id.toString()\n    return Bot.create({\n      id,\n      token: { ...token, owner_id: id }\n    })\n  }\n}\n\nObject.defineProperty(Bot.prototype, 'rc', {\n  get: function () {\n    const rc = new RingCentral(\n      process.env.RINGCENTRAL_CHATBOT_CLIENT_ID,\n      process.env.RINGCENTRAL_CHATBOT_CLIENT_SECRET,\n      process.env.RINGCENTRAL_SERVER\n    )\n    rc.token(this.token)\n    return rc\n  }\n})\n\nBot.prototype.check = async function () {\n  try {\n    await this.rc.get('/restapi/v1.0/account/~/extension/~')\n    return true\n  } catch (e) {\n    if (!e.data) {\n      throw e\n    }\n    const errorCode = e.data.errorCode\n    if (errorCode === 'OAU-232' || errorCode === 'CMN-405') {\n      await this.remove()\n      console.log(`Bot check: bot user ${this.id} had been deleted`)\n      return false\n    }\n    throw e\n  }\n}\n\nBot.prototype.ensureWebHook = async function () {\n  const r = await this.rc.get('/restapi/v1.0/subscription')\n  let hasActiveSub = false\n  const subs = r.data.records.filter(sub => sub.deliveryMode.address === process.env.RINGCENTRAL_CHATBOT_SERVER + '/bot/webhook')\n  for (const sub of subs) {\n    if (hasActiveSub || sub.status !== 'Active') {\n      await this.rc.delete(`/restapi/v1.0/subscription/${sub.id}`)\n    } else {\n      hasActiveSub = true\n    }\n  }\n  if (!hasActiveSub) {\n    await this.setupWebHook()\n  }\n}\nBot.prototype.setupWebHook = async function () {\n  let done = false\n  while (!done) {\n    try {\n      await this.rc.post('/restapi/v1.0/subscription', {\n        eventFilters: [\n          '/restapi/v1.0/glip/posts',\n          '/restapi/v1.0/glip/groups',\n          '/restapi/v1.0/account/~/extension/~'\n        ],\n        expiresIn: 473040000, // 15 years\n        deliveryMode: {\n          transportType: 'WebHook',\n          address: process.env.RINGCENTRAL_CHATBOT_SERVER + '/bot/webhook'\n        }\n      })\n      done = true\n    } catch (e) {\n      const errorCode = e.data.errorCode\n      if (errorCode === 'SUB-406') {\n        await delay(10000)\n        continue\n      }\n      throw e\n    }\n  }\n}\n\nBot.prototype.sendMessage = async function (groupId, messageObj) {\n  const r = await this.rc.post(`/restapi/v1.0/glip/groups/${groupId}/posts`, messageObj)\n  return r.data\n}\n\nBot.prototype.getGroup = async function (groupId) {\n  try {\n    const r = await this.rc.get(`/restapi/v1.0/glip/groups/${groupId}`)\n    return r.data\n  } catch (e) {\n    if (e.status === 404) {\n      return undefined\n    }\n    throw e\n  }\n}\n\nBot.prototype.remove = async function () {\n  const services = await Service.findAll({ where: { botId: this.id } })\n  for (const service of services) {\n    await service.destroy()\n  }\n  await this.destroy()\n}\n\nBot.prototype.rename = async function (newName) {\n  await this.rc.put('/restapi/v1.0/account/~/extension/~', {\n    contact: { firstName: newName }\n  })\n}\n\nBot.prototype.setAvatar = async function (data, name) {\n  const formData = new FormData()\n  formData.append('image', data, name)\n  await this.rc.put('/restapi/v1.0/account/~/extension/~/profile-image', formData, {\n    headers: formData.getHeaders()\n  })\n}\n\nBot.prototype.getUser = async function (userId) {\n  let r = await this.rc.get(`/restapi/v1.0/glip/persons/${userId}`)\n  const glip = r.data\n  let rc\n  if (!glip.id.startsWith('glip-')) {\n    r = await this.rc.get(`/restapi/v1.0/account/${glip.companyId}/extension/${glip.id}`)\n    rc = r.data\n  }\n  return { glip, rc }\n}\n\nBot.prototype.getSubscriptions = async function () {\n  const r = await this.rc.get('/restapi/v1.0/subscription')\n  return r.data.records\n}\n"],"file":"Bot.js"}